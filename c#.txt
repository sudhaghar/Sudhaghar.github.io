1.print name:
using System;
					
public class Program
{ void PrintName()
    { string name;
	 Console.WriteLine("Please enter your name");
      name = Console.ReadLine();
      Console.WriteLine("Your name is "+name);
    }
	public static void Main()
	{
		Console.WriteLine("Hello World");
		Program program= new Program();
		program.PrintName();
	}
}

2.sum two number:
using System;
					
public class Program
{ void PrintName()
    { string name;
	 Console.WriteLine("Please enter your name");
      name = Console.ReadLine();
      Console.WriteLine("Your name is "+name);
    }
 void Add()
 {
	 int num1,num2,sum;
	 Console.WriteLine("Please enter the First number");
	 num1 = Convert.ToInt32(Console.ReadLine());
	 Console.WriteLine("Please enter the second number");
	 num2 = Int32.Parse(Console.ReadLine());
	 sum=num1+num2;
	 Console.WriteLine("sum is "+sum);
 }
	public static void Main(String[] a)
	{
		Console.WriteLine("Hello World");
		Program program= new Program();
		//program.PrintName();
		program.Add();
	}
}

3.Find largest number:
using System;
					
public class Program
{ void PrintName()
    { string name;
	 Console.WriteLine("Please enter your name");
      name = Console.ReadLine();
      Console.WriteLine("Your name is "+name);
    }
 void Add()
 {
	 int num1,num2,sum;
	 Console.WriteLine("Please enter the First number");
	 num1 = Convert.ToInt32(Console.ReadLine());
	 Console.WriteLine("Please enter the second number");
	 num2 = Int32.Parse(Console.ReadLine());
	 sum=num1+num2;
	 Console.WriteLine("sum is "+sum);
 }
 void Large()
 {
	 int num1,num2,sum;
	 Console.WriteLine("Please enter the First number");
	 num1 = Convert.ToInt32(Console.ReadLine());
	 Console.WriteLine("Please enter the second number");
	 num2 = Int32.Parse(Console.ReadLine());
	 if(num1==num2)
	 Console.WriteLine("the numbers are equal ");
	 else if(num1>num2)
		 Console.WriteLine("number1 is greater");
	 else 
		  Console.WriteLine("number2 is greater");

 }
	public static void Main(String[] a)
	{
		Console.WriteLine("Hello World");
		Program program= new Program();
		//program.PrintName();
		//program.Add();
		program.Large();
	}
}

4.single dimension array
using System;
					
public class Program
{
	void Getscore()
	{
		float[] scores = new float[5];
		float total = 0.0f;
		for (int i=0;i<5;i++)
			scores[i] = float.Parse(Console.ReadLine());
		Console.WriteLine("the total scores is");
		for (int i=0;i<5;i++)
			total =total +scores[i];
		Console.WriteLine(total);
	}
	public static void Main(String[] a)
	{
		Program program =new Program();
	    program.Getscore();
	}
}

5.Multi dimension array
using System;
					
public class Program
{
	void Getscore()
	{
		float[] scores = new float[5];
		float total = 0.0f;
		for (int i=0;i<5;i++)
			scores[i] = float.Parse(Console.ReadLine());
		Console.WriteLine("the total scores is");
		for (int i=0;i<5;i++)
			total =total +scores[i];
		Console.WriteLine(total);
	}
	void GetNameAndDept()
	{
	string[,] empDetails =new string[3,3];
		Console.WriteLine("Pls enter the name and from and to department");
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				empDetails[i,j] = Console.ReadLine();
			 }
		}
			for(int i=0;i<3;i++)
			{
			for(int j=0;j<3;j++)
			{
				Console.Write(empDetails[i,j]+"\t");
			}
				Console.WriteLine();
				
			}
		}
	
	
	public static void Main(String[] a)
	{
		Program program =new Program();
	    //program.Getscore();
		program.GetNameAndDept();
	}
}


6.Jagged array
using System;
					
public class Program
{
	void Getscore()
	{
		float[] scores = new float[5];
		float total = 0.0f;
		for (int i=0;i<5;i++)
			scores[i] = float.Parse(Console.ReadLine());
		Console.WriteLine("the total scores is");
		for (int i=0;i<5;i++)
			total =total +scores[i];
		Console.WriteLine(total);
	}
	void GetNameAndDept()
	{
	string[,] empDetails =new string[3,3];
		Console.WriteLine("Pls enter the name and from and to department");
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				empDetails[i,j] = Console.ReadLine();
			 }
		}
			for(int i=0;i<3;i++)
			{
			for(int j=0;j<3;j++)
			{
				Console.Write(empDetails[i,j]+"\t");
			}
				Console.WriteLine();
				
			}
		}
	void GettingBalance()
	{
		double[][] accountBalances = new Double[3][];
		int size=0;
		for(int i=0;i<3;i++)
		{
			Console.WriteLine("enter the number of bank accounts you have");
			size =Convert.ToInt32(Console.ReadLine());
			accountBalances[i] = new double[size];
			for(int j=0;j<size;j++)
			{
				accountBalances[i][j] = double.Parse(Console.ReadLine());
			}
		}
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<accountBalances[i].Length;j++)
			{
				Console.Write(accountBalances[i][j]);
			}
			Console.WriteLine();
		}
		double total;
		for(int i=0;i<3;i++)
		{
			total=0.0;
			for(int j=0;j<accountBalances[i].Length;j++)
			{
				total =total+accountBalances[i][j];
			}
			Console.WriteLine("The Total money in all acoount of {0} person is{1}",(i+1),total);
		}
	}
	
			
	
	public static void Main(String[] a)
	{
		Program program =new Program();
	    //program.Getscore();
		//program.GetNameAndDept();
		program.GettingBalance();
	}
}

7.home work 1
using System;
					
public class Program
{
	int num;
	/*void GetNumber()
	{
		num=Convert.ToInt32(Console.ReadLine());
	}*/ 
	void CalculateAverage()
	{
		int total=0,count=0;
		float avg;
		do
		{
			num=Convert.ToInt32(Console.ReadLine());
			if(num!=-1)
			{
				if(num%7==0)
				{
					total+=num;
					count++;
				}	
			}	
		}while(num>=0);
		avg=total/count;
		Console.WriteLine("Avg is "+avg);
	} 
	public static void Main()
	{
			Program program = new Program();
			program.CalculateAverage();
	}
}

8.Inheritance:

using System;
					
public class Road
{
	void StartRide()
	{
		MotorCycle tvs = new MotorCycle();
		tvs.RingBell();
		tvs.Horn();
		Console.WriteLine("The speed is "+tvs.Speed);
	}

   public static void Main()
  {
	Road road =new Road();
	road.StartRide();
  }
}
class Cycle
{  
	public int Speed;
	public Cycle()
	{
		Console.WriteLine("Cycle Created");
        Speed=10;
	}
   public void RingBell()
	{
		Console.WriteLine("tring tring");
	}
}
class MotorCycle:Cycle
{
 public MotorCycle()
 {
	 Speed=50;
	 Console.WriteLine("Motor Added");
 }
	public void Horn()
	{ 
		Console.WriteLine("beep beep");
	}
}


9.Multi level:

using System;
					
public class Shop
{
	void Sell()
	{
		Mobile mobile =new Mobile();
		mobile.Mobilecalls();
		mobile.WatchMovie();
		mobile.Work();
	}
	public static void Main()
	{
		new Shop().Sell();
	}
	class PC
	{
		public PC()
		{
			Console.WriteLine("PC created");
		}
		internal void Work()
		{
			Console.WriteLine("Program and practice");
		}
	}
	class Laptop:PC
	{
		public Laptop()
		{
			Console.WriteLine("No it is portable");
		}
		public void WatchMovie()
		{
			Console.WriteLine("Movies here and movies There");
		}
	}
	class Mobile : Laptop
	{
		public Mobile()
		{
			Console.WriteLine("slim and less weight");
		}
		public void Mobilecalls()
		{
			Console.WriteLine("hello there..");
		}	
	}
}


10.

using System;
					
public class Home
{
	void Live()
	{
	Student student =new Student();
		student.Study();
		Emp emp=new Emp();
		emp.Work();
	}
	public static void Main()
	{
		new Home().Live();
	}
}
	class Human
	{
		public Human()
		{
			Console.WriteLine("Today class going to be");
		}
	}
	class Student : Human 
	{
		public Student()
		{
			Console.WriteLine("Topic is Maths");
		}
		internal void Study()
		{
			Console.WriteLine("Program and practice");
		}
	}
	
	class Emp : Human
	{
		public Emp()
		{
			Console.WriteLine("Program Development ");
		}
		public void Work()
		{
			Console.WriteLine("DotNet");
		}	
	}
 

11.class House
    {
        int locker;
        int noOfRooms, noOfBedRooms;
        string[] members;

        public string this[int i]
        {
            get { return members[i]; }
            set { members[i] = value; }
        }


        public int NoOfBedRooms
        {
            get { return noOfBedRooms; }

        }

        public int NoOfRooms
        {
            get { return noOfRooms; }
            set
            {
                noOfRooms = value;
                noOfBedRooms = value - 2;
            }
        }

        public int Locker
        {
            get { return Locker; }
            set { Locker = value-10; }
        }
        internal House()
        {
            members = new string[5];
        }
    }

 class Program
    {
        static void Main(string[] args)
        {
            House house = new House();
            house[0] = "ram";
            for (int i = 0; i < 5; i++)
            {
                house[i] = Console.ReadLine();

            }
            house.NoOfRooms = 5;
            Console.WriteLine("Member of the House");
            for (int i = 0; i < 5; i++)
            {
                Console.WriteLine(house[i]);
            }

            Console.ReadKey();
        }
    }

12.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplicationEmployee
{
    class Employee
    {
        int empId, empAge;

public int EmpAge
{
  get { return empAge; }
  set { empAge = value; }
}

public int EmpId
{
  get { return empId; }
  set { empId = value; }
}
        string empName;

public string EmpName
{
  get { return empName; }
  set { empName = value; }
}
        string[] empskill;
        internal Employee()
        {
            empskill = new string[5];
        }
        internal void TakeEmployeeData()
        {
            Console.WriteLine("Pls enter the employee  Id");
            empId = int.Parse(Console.ReadLine());
            Console.WriteLine("pls enter employee name");
            empName = Console.ReadLine();
            Console.WriteLine(" pls enter employee Age  ");
            empAge = int.Parse(Console.ReadLine());
            Console.WriteLine("pls enter skills of employee");
            for (int i = 0; i < 5; i++)
            {
                empskill[i] = Console.ReadLine();

            }
        }

            internal void PrintEmployeeData()
            {
                Console.WriteLine("....");
                Console.WriteLine("Employee ID"+empId);
                Console.WriteLine("Employee name"+empName);
                Console.WriteLine("Employee Age"+empAge);
                Console.WriteLine("Employee Skill");
                for(int i=0;i<empskill.Length;i++)
                {
                    Console.WriteLine(" "+empskill[i]);
                }
            }

        public string this[int index]
	{
		get {return empskill[index]; }
		set { empskill[index] = value;}
	}
           
        }
    }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplicationEmployee
{
    class Company
         { 
        Employee employee;
        Company()
        {
            employee = new Employee();
        }
          void AddEmployee()
            {
                employee.TakeEmployeeData();
            }
        void DisplayEmployee()
        {
            employee.PrintEmployeeData();
        }
       

        static void Main(string[] s)
       {
    Company cts =new Company();
    cts.AddEmployee();
    cts.DisplayEmployee();
    Console.ReadKey();
        }
    }
}



13.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplicationEmployee
{
    class Employee
    {
        int empId, empAge;

public int EmpAge
{
  get { return empAge; }
  set { empAge = value; }
}

public int EmpId
{
  get { return empId; }
  set { empId = value; }
}
        string empName;

public string EmpName
{
  get { return empName; }
  set { empName = value; }
}
        string[] empskill;
        internal Employee()
        {
            empskill = new string[5];
        }
        internal Employee(int size)
        {
            empskill = new string[size];
        }

        internal void TakeEmployeeData(int id)
        {
            empId = id;
            Console.WriteLine("Pls enter the employee  Id");
            empId = int.Parse(Console.ReadLine());
            Console.WriteLine("pls enter employee name");
            empName = Console.ReadLine();
            Console.WriteLine(" pls enter employee Age  ");
            empAge = int.Parse(Console.ReadLine());
            Console.WriteLine("pls enter skills of employee");
            for (int i = 0; i < 5; i++)
            {
                empskill[i] = Console.ReadLine();

            }
        }

            internal void PrintEmployeeData()
            {
                Console.WriteLine("....");
                Console.WriteLine("Employee ID"+empId);
                Console.WriteLine("Employee name"+empName);
                Console.WriteLine("Employee Age"+empAge);
                Console.WriteLine("Employee Skill");
                for(int i=0;i<empskill.Length;i++)
                {
                    Console.WriteLine(" "+empskill[i]);
                }
            }

        public string this[int index]
	{
		get {return empskill[index]; }
		set { empskill[index] = value;}
	}
           
        }
    }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplicationEmployee
{
    class Company
         { 
        Employee[] employees;
        Company()
        {      employees = new Employee[3];
           for(int i=0;i<3;i++)
            {
                Console.WriteLine("pls enter no of skills of employee ");
            int num = 0;
            num = Int32.Parse(Console.ReadLine());
            employees[i] = new Employee(num);
         }
       }
          void AddEmployee()
            {
    for(int i=0;i<3;i++)
            {
                employees[i].TakeEmployeeData((100+i+1));
     }
}
        void DisplayEmployee()
        {
    for(int i=0;i<3;i++)
{
            employees[i].PrintEmployeeData();
        }
}     
        static void Main(string[] s)
       {
    Company cts =new Company();
    cts.AddEmployee();
    cts.DisplayEmployee();
    Console.ReadKey();
        }
    }
}



14.Overload:


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplicationEmployee
{
    class Company
         { 
        Employee[] employees;
        Company()
        {      employees = new Employee[3];
           for(int i=0;i<3;i++)
            {
                Console.WriteLine("pls enter no of skills of employee ");
            int num = 0;
            num = Int32.Parse(Console.ReadLine());
            employees[i] = new Employee(num);
         }
       }
          void AddEmployee()
            {
    for(int i=0;i<3;i++)
            {
                employees[i].TakeEmployeeData((100+i+1));
     }
}
        void DisplayEmployee()
        {
    for(int i=0;i<3;i++)
{
            employees[i].PrintEmployeeData();
        }
}     
        static void Main(string[] s)
       {
    Company cts =new Company();
    cts.AddEmployee();
    cts.DisplayEmployee();
    Console.ReadKey();
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplicationEmployee
{
    class Employee
    {
        int empId, empAge;

public int EmpAge
{
  get { return empAge; }
  set { empAge = value; }
}

public int EmpId
{
  get { return empId; }
  set { empId = value; }
}
        string empName;

public string EmpName
{
  get { return empName; }
  set { empName = value; }
}
        string[] empskill;
        internal Employee()
        {
            empskill = new string[5];
        }
        internal Employee(int size)
        {
            empskill = new string[size];
        }

        internal void TakeEmployeeData(int id)
        {
            empId = id;
            Console.WriteLine("....");
            Console.WriteLine("Pls enter the employee  Id");
            empId = int.Parse(Console.ReadLine());
            Console.WriteLine("pls enter employee name");
            empName = Console.ReadLine();
            Console.WriteLine(" pls enter employee Age  ");
            empAge = int.Parse(Console.ReadLine());
            Console.WriteLine("pls enter skills of employee");
            for (int i = 0; i < 5; i++)
            {
                empskill[i] = Console.ReadLine();

            }
        }

            internal void PrintEmployeeData()
            {
                Console.WriteLine("....");
                Console.WriteLine("Employee ID"+empId);
                Console.WriteLine("Employee name"+empName);
                Console.WriteLine("Employee Age"+empAge);
                Console.WriteLine("Employee Skill");
                for(int i=0;i<empskill.Length;i++)
                {
                    Console.WriteLine(" "+empskill[i]);
                }
            }
            public static bool operator ==(Employee e1, Employee e2)
            {
                bool bresult = false;
                if (e1.empName == e2.empName)
                    bresult = true;
                return bresult;
            }
            public static bool operator !=(Employee e1, Employee e2)
            {
                bool bresult = false;
                if (e1.empName != e2.empName)
                    bresult = true;
                return bresult;

            }
            
            public string this[int index]
	{
		get {return empskill[index]; }
		set { empskill[index] = value;}
	}
           
        }
    }



15.Venue Details:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

class Venue
{
    public string name;
    public string city;

    public void GetInput()
    {
        Console.WriteLine("Enter the venue details");
        string data = Console.ReadLine();
        string[] words = data.Split(',');
        name = words[0];
        city = words[1];
    }
    public void DispalyVenue()
    {
        Console.WriteLine("Venue Details");
        Console.WriteLine("Venue Name : " + name);
        Console.WriteLine("City Name :  " + city);
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

class Program
{
    static void Main(string[] args)
    {
        Venue d = new Venue();
        d.GetInput();
        d.DispalyVenue();
    }
}


16.Override:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


    class Program
    {
        void Pullcart(Animal animal)
        {
            animal.Eat();
            animal.Move();
            animal.Sleep();
        }
        void Hirecart()
        {
            Console.WriteLine("you can hire a animal \n1)Horse\n2)Donkey\n3)Any animal");
            int iNum = 0;
            iNum = Convert.ToInt32(Console.ReadLine());
            Animal animal = null;
            switch (iNum)
            {
                case 1: Console.WriteLine("You have selected horse");
                    animal = new Horse();
                    break;
                case 2: Console.WriteLine("You have selected donkey");
                    animal = new Donkey();
                    break;
                default :Console.WriteLine("you have selected any animal");
                    animal = new Animal();
                    break;
            }
            Pullcart(animal);
         }
        static void Main(string[] args)
        { new Program().Hirecart();
            Console.ReadKey();

        }
    }
    class Animal
    {
        internal void Eat()
        {
            Console.WriteLine("All animals eat");
        }
        internal void Sleep()
        {
            Console.WriteLine("zzzzzz");
        }
        internal virtual void Move()
        {
            Console.WriteLine("One place to another. But unsure speed");
        }
    }
    class Horse : Animal
    {
        internal void GetTrained()
        {
            Console.WriteLine("some horse are trained for pilice");
        }
        internal override void Move()
        {
            Console.WriteLine("tot a tok tok a tok");
        }
    }
    class Donkey : Animal
    {
        internal void CarryClothes()
        {
            Console.WriteLine("some donkeys are used by washer men");
        }
        internal override void Move()
       {
 	         Console.WriteLine("tok.....tokTok....tok");
       }
    }

  

17.Abstract:

         using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

   class DogShow
    {
       void RegisterDog()
       {
           Console.WriteLine("pls register your dog breed \n1)greatDane\n2)Pug\n3)No Dog");
           int iNum = 0;
           //iNum = Convert.ToInt32(Console.ReadLine());
          while(! Int32.TryParse(Console.ReadLine(), out iNum))
              Console.WriteLine("you cant even enter a number properly??");
           Dog dog = null;

           checked
           {
               int isample = Int32.MaxValue;
               isample++;
               Console.WriteLine(isample);
           }

         switch (iNum)
           {
               case 1: Console.WriteLine("You have a greatdane");
                  dog = new GreatDane();
                   break;
               case 2: Console.WriteLine("You have a pug");
                   dog = new Pug();
                   break;
               case 3: Console.WriteLine("No dog !!");
                   break;
               default: Console.WriteLine("why r u here");
                   break;
           }
           if (dog != null)
           {
               dog.Bark();
               dog.Eat();
               dog.Look();
           }
       }
        static void Main(string[] args)
        {
            new DogShow().RegisterDog();
            Console.ReadKey();
        }
   }
     abstract class Dog
        {
            internal void Bark()
            {
                Console.WriteLine("bow bow");
            }
            internal void Eat()
            {
                Console.WriteLine("Pedigree");
            }
            internal abstract void Look();
     }
            class GreatDane : Dog
            {
                internal override void Look()
                {
                    Console.WriteLine("big and beautiful");
                }
            }
            class Pug : Dog
            {
                internal override void Look()
                {
                    Console.WriteLine(" small and stout");
                }
            }
        
    

18.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

interface EmployeeManager
{
    void SetTarget();
    void ConductMeeting();
    void TeamLunch();
}
interface CustomerManager
{
    void SolveIssuse();
    void TeamLunch();
}

class Manager : EmployeeManager, CustomerManager
{
    public void Live()
    {
        Console.WriteLine("even manager has own life");
    }

    public void SetTarget()
    {
        Console.WriteLine("Manager sets target for employee and motivate them to achive to");
    }
    public void ConductMeeting()
    {
        Console.WriteLine("create the meeting asa a channel for coummunicating work trouble and sol ");
    }
    public void SolveIssuse()
    {
        Console.WriteLine("solve customer bank problem");
    }
    public void TeamLunch()
    {
        Console.WriteLine("eating with customer r employee ");
    }
}
class Bank
{
    static void Main(string[] s)
    {
        Bank sbiBank = new Bank();
        sbiBank.Startworking();
        Console.ReadKey();
    }
    private void Startworking()
    {
        EmployeeManager empMgr = new Manager();
        empMgr.TeamLunch();
    }
}

19.Update Player Details:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

class Program
{
    static void Main(string[] args)
    {
        int a;
        //char b='y';
        Player player = new Player();
        player.GetVal();
        player.PrintVal();
        Console.WriteLine("Verify and Update Player Details");
        do
        {
            
            
            Console.WriteLine("Menu");
            Console.WriteLine("1.Update Player Name");
            Console.WriteLine("2.Update Country Name");
            Console.WriteLine("3.Update Skill");
            Console.WriteLine("4.All informations Correct/Exit");
            Console.WriteLine("Type 1 or 2 or 3 or 4");
            a = Convert.ToInt32(Console.ReadLine());
            switch (a)
            {
                case 1:
                    Console.WriteLine("The current player name is " + player.Name);
                    Console.WriteLine("Enter the player name");
                    player.Name = Console.ReadLine();
                    break;
                case 2:
                    Console.WriteLine("The current country name is " + player.Country);
                    Console.WriteLine("Enter the country name");
                    player.Country = Console.ReadLine();
                    break;
                case 3:
                    Console.WriteLine("The current skill is " + player.Skill);
                    Console.WriteLine("Enter the skill");
                    player.Skill = Console.ReadLine();
                    break;
                case 4:
                    player.PrintVal();
                    break;
            }

        } while (a<4);
    }

}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

class Player
{
    string _name, _country, _skill;
    public void GetVal()
    {

        Console.WriteLine("Enter the player name");
        _name = Console.ReadLine();
        Console.WriteLine("Enter the country name");
        _country = Console.ReadLine();
        Console.WriteLine("Enter the skill");
        _skill = Console.ReadLine();
    }
    public void PrintVal()
    {
        Console.WriteLine("Player Details");
        Console.WriteLine("Player Name :" +_name);
        Console.WriteLine("Country Name :" +_country);
        Console.WriteLine("Skill :" +_skill);

    }



20.Exp Handling :

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


    class Program
    {

        int num1, num2;

        public int Num2
        {
            get { return num2; }
            set { num2 = value; }
        }

        public int Num1
        {
            get { return num1; }
            set { num1 = value; }
        }
        void TakeNumbers()
        {
            Console.WriteLine("Enter thye first number");
            Int32.TryParse(Console.ReadLine(), out num2);

        }
        void Divide()
        {
            float result = 0.0f;
            try
            {
               result = Num1 / Num2;
            }
            catch (DivideByZeroException dbzException)
            {
                Console.WriteLine(dbzException.Message);
            }
        }
        static void Main(string[] args)
        {
            Program program = new Program();
            program.TakeNumbers();
            program.Divide();
            Console.ReadKey();
        }
    }


21.mulitple catch:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

class Program
{

    int num1, num2;

    public int Num2
    {
        get { return num2; }
        set { num2 = value; }
    }

    public int Num1
    {
        get { return num1; }
        set { num1 = value; }
    }
    void TakeNumbers()
    {
        Console.WriteLine("Enter thye first number");
        num1=Int32.Parse(Console.ReadLine());
        Console.WriteLine("Enter thye second number");
        num2=Int32.Parse(Console.ReadLine());

    }
    void Divide()
    {
        float result = 0.0f;
        try
        {
            Console.WriteLine("Enter the first number");
            num1 = Int32.Parse(Console.ReadLine());
            Console.WriteLine("Enter the second number");
            num2 = Int32.Parse(Console.ReadLine());
            result = Num1 / Num2;
        }
       
        catch (DivideByZeroException dbzException)
        {
            Console.WriteLine(dbzException.Message);
        }
        catch (FormatException formatexception)
        {
            Console.WriteLine("pls enter a number");
        }
            catch(Exception exception)
        {
            Console.WriteLine("some error");
            }
        finally
        {
            Console.WriteLine("Always");
        }
        Console.WriteLine("the result is"+result);

    }
    public override string ToString()
    {
        return "number 1:" + num1 +"number 2:" + num2;
    }
    static void Main(string[] args)
    {
        Program program = new Program();
        //program = null;
        //program.TakeNumbers();
        //program.Divide();
        Console.WriteLine(program);
        Console.ReadKey();
    }
}

